public class Solution 
{
    public void PrintNumbers(int n) 
    {
        if(n <= 0)
            return null;
        char[] number = new char[n + 1];
        number[n] = '\0';
        while(!Increment(number))
            PrintNumber(number);    
    }
    
    bool Increment(char[] number)
    {
        bool isOverflow = false;
        int nTakeOver = 0;
        int len = number.Length;
        for(int i = len - 1; i >= 0; i--)
        {
            int nSum = number[i] -'0' + nTakeOver;
            if(i == len - 1)
                nSum++;
            if(nSum >= 10)
            {
                if(i == 0)
                    isOverflow = true;
                else
                {
                    nSum -= 10;
                    nTakeOver = 1;
                    number[i] = '0' + nSum;
                }
            }
            else
            {
                number[i] = '0' + nSum;
                break;
            }
        }
        return isOverflow;
    }
    
    void PrintNumber(char[] number)
    {
        bool isBeginning0 = true;
        int len = number.Length;
        for(int i = 0; i < len; i++)
        {
            if(isBeginning0 && number[i] != '0')
                isBeginning0 = false;
            if(!isBeginning0)
            {
                Console.WriteLine(number[i]);
            }
        }
    }    
}