题干：
实现函数double Power(double base, int exponent)，求base的exponent次方。
不得使用库函数，同时不需要考虑大数问题。
示例 1:
输入: 2.00000, 10
输出: 1024.00000
示例 2:
输入: 2.10000, 3
输出: 9.26100
示例 3:
输入: 2.00000, -2
输出: 0.25000
解释: 2-2 = 1/22 = 1/4 = 0.25

解法：需要考虑底数是否为0，为0时指数是否为负，为负时返回0，当指数为负数时，先计算指数取绝对值时的值，再将其取反，核心部分求数值的整数次方的函数可以用更优化的方法来计算：
a^n = a^(n/2)*a^(n/2) n为偶数  = a^((n-1)/2)*a^((n-1)/2)*a n为奇数
当x=0时：直接返回0（避免后续x=1/x操作报错）。
初始化res=1；
当n<0时：把问题转化至n≥0的范围内，即执行x=1/x n=−n；
循环计算：当n=0时跳出；
当n&1=1时：将当前x乘入res（即res∗=x）；
执行x=x^2（即x∗=x）；
执行n右移一位（即n>>=1）。
返回res 