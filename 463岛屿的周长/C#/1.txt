public class Solution 
{
    public int IslandPerimeter(int[][] grid) 
    {
        int perimeter = 0;
        int row = grid.Length, column = grid[0].Length;
        for(int i = 0; i < row; i++)
        {
            for(int j = 0; j < column; j++)
            {
                perimeter += PerimeterCaculation(grid, i, j, row, column);
            }
        }
        return perimeter;
    }
    
    public int PerimeterCaculation(int[][] grid, int i, int j, int row, int column)
    {
        if(grid[i][j] == 0)
            return 0;
        int count = 0;
        if(i + 1 < row)
            count += grid[i+1][j];
        if(i - 1 >= 0)
            count += grid[i-1][j];
        if(j + 1 < column)
            count += grid[i][j+1];
        if(j - 1 >= 0)
            count += grid[i][j-1];
        return 4-count;
    }
}