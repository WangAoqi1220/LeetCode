public class Solution 
{
    public bool Exist(char[][] board, string word) 
    {
        for(int i = 0; i < board.Length; i++)
        {
            for(int j = 0; j < board[0].Length; j++)
            {
                if(dfs(board, word, i, j, 0))
                    return true;
            }
        }
        return false;
    }
    
    public bool dfs(char[][] board, string word, int row, int col, int index)
    {
        if(row >= board.Length || row < 0 || col >= board[0].Length || col < 0 || board[row][col] != word[index])
            return false;
        if(index == word.Length - 1) return true; 
        char tmp = board[row][col];
        board[row][col] = '/';
        bool res = dfs(board, word, row + 1, col, index + 1) || dfs(board, word, row - 1, col, index + 1) || 
                      dfs(board, word, row, col + 1, index + 1) || dfs(board, word, row , col - 1, index + 1);
        board[row][col] = tmp;
        return res;
    }
}