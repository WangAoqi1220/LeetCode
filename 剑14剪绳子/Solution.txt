题干：
给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m-1] 。请问 k[0]*k[1]*...*k[m-1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。

解法：
贪婪算法，当n>=5时，我们可以知道，2(n-2)>n,3(n-3)>n，所以我们要尽可能多地将绳子剪成长为2和3的线段，又因为n>=5时，3(n-3)>=2(n-2)，所以应该尽可能地剪成长为3的线段，当长度小于5时，为4时不应继续剪出3的线段，因为2*2>3*1
还可以用动态规划来做，再次不加赘述