题干：
我们把数组 A 中符合下列属性的任意连续子数组 B 称为 “山脉”：
B.length >= 3
存在 0 < i < B.length - 1 使得 B[0] < B[1] < ... B[i-1] < B[i] > B[i+1] > ... > B[B.length - 1]
（注意：B 可以是 A 的任意子数组，包括整个数组 A。）
给出一个整数数组 A，返回最长 “山脉” 的长度。
如果不含有 “山脉” 则返回 0。
示例 1：
输入：[2,1,4,7,3,2,5]
输出：5
解释：最长的 “山脉” 是 [1,4,7,3,2]，长度为 5。
示例 2：
输入：[2,2,2]
输出：0
解释：不含 “山脉”。

提示：
0 <= A.length <= 10000
0 <= A[i] <= 10000

解法：
遍历整个数组，若当前数小于后一个数（即上坡），同时当前数的位于数组头或是之前数组处于下坡，则重置山脉的起点，如果当前数大于后一个数，且山脉的拥有起点（不为-1），则比较当前山脉的长度与之前最大山脉长度，取最大值，若当前数等于后一个数，则将山脉起点设为-1（即当前不在山脉中）