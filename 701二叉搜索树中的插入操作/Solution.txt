题干：给定二叉搜索树（BST）的根节点和要插入树中的值，将值插入二叉搜索树。 返回插入后二叉搜索树的根节点。 输入数据保证，新值和原始二叉搜索树中的任意节点值都不同。
注意，可能存在多种有效的插入方式，只要树在插入后仍保持为二叉搜索树即可。 你可以返回任意有效的结果。
例如, 

给定二叉搜索树:

        4
       / \
      2   7
     / \
    1   3

和 插入的值: 5
你可以返回这个二叉搜索树:

         4
       /   \
      2     7
     / \   /
    1   3 5
或者这个树也是有效的:

         5
       /   \
      2     7
     / \   
    1   3
         \
          4

解法：
首先回顾二叉搜索树的性质：对于任意节点root而言，左子树（如果存在）上所有节点的值均小于 root.val，右子树（如果存在）上所有节点的值均大于root.val，且它们都是二叉搜索树。
因此，当将val插入到以root为根的子树上时，根据val与root.val的大小关系，就可以确定要将val插入到哪个子树中。
如果该子树不为空，则问题转化成了将val插入到对应子树上。
否则，在此处新建一个以val为值的节点，并链接到其父节点root上。