题干：
给你一个数组 nums，对于其中每个元素 nums[i]，请你统计数组中比它小的所有数字的数目。
换而言之，对于每个 nums[i] 你必须计算出有效的 j 的数量，其中 j 满足 j != i 且 nums[j] < nums[i] 。
以数组形式返回答案。

示例 1：
输入：nums = [8,1,2,2,3]
输出：[4,0,1,1,3]
解释： 
对于 nums[0]=8 存在四个比它小的数字：（1，2，2 和 3）。 
对于 nums[1]=1 不存在比它小的数字。
对于 nums[2]=2 存在一个比它小的数字：（1）。 
对于 nums[3]=2 存在一个比它小的数字：（1）。 
对于 nums[4]=3 存在三个比它小的数字：（1，2 和 2）。
示例 2：
输入：nums = [6,5,4,8]
输出：[2,1,0,3]
示例 3：
输入：nums = [7,7,7,7]
输出：[0,0,0,0]

提示：
2 <= nums.length <= 500
0 <= nums[i] <= 100

解法：
通过计数排序来解决这个问题，因为我们观察到，nums中的元素大小只在0到100之间，所以我们开辟一个大小为101的数组，遍历整个nums数组，来统计每个数出现的次数，再遍历计数数组，将前一位的元素加在后一位上，即计算数组中的每一位元素表示的是小于这个数的元素个数，创建res答案数组，最后再遍历一遍nums数组，若当前位的元素为0，则res相应位置上的元素置为0，反之，则置为计数数组counter[nums[k - 1]]