/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution 
{
    public ListNode DetectCycle(ListNode head) 
    {
        if(head == null || head.next == null)
            return null;
        ListNode slowNode = head, quickNode = head;        
        do
        {
            if(quickNode == null || quickNode.next == null)
                return null;
            slowNode = slowNode.next;
            quickNode = quickNode.next.next;
        }while(slowNode != quickNode);
        ListNode index = head;
        while(index != slowNode)
        {
            index = index.next;
            slowNode = slowNode.next;
        }
        return index;
    }
}