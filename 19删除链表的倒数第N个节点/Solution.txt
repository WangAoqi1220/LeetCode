题干：
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。
示例：
给定一个链表: 1->2->3->4->5, 和 n = 2.
当删除了倒数第二个节点后，链表变为 1->2->3->5.
说明：
给定的 n 保证是有效的。
进阶：
你能尝试使用一趟扫描实现吗？

解法一:
设置双指针，同时设置哑指针，指向链表的头节点，将快指针向前移动n-1次，两个指针之间间隔着n-1个节点，之后让两个指针以同样的速度向前移动，当快指针达到链表得末尾时，慢指针刚好停在要删除指针的前一个节点，将慢指针的next指向next.next即可，要注意如果此时慢指针的next指向的是头节点时，需要特殊处理，返回head.next。
解法二:同样是双指针，不需要设置哑指针，找到需要删除的节点时，将该节点的下一个节点的信息复制到当前节点，然后删除后一个节点即可，注意若删除的节点为最末尾的节点，则需特殊处理，将倒数第二个节点指向null
解法三：
我们也可以在遍历链表的同时将所有节点依次入栈。根据栈「先进后出」的原则，我们弹出栈的第 n个节点就是需要删除的节点，并且目前栈顶的节点就是待删除节点的前驱节点。这样一来，删除操作就变得十分方便了。
